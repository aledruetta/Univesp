<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style TargetType="ToolTip">
    <Setter Property="FontSize" Value="20"/>
  </Style>
  <Style TargetType="TextBox" x:Key="TextBoxBaseStyle">
    <Setter Property="Padding" Value="5"/>
  </Style>
  <Style TargetType="TextBox"
         BasedOn="{StaticResource TextBoxBaseStyle}">
    <Setter Property="Background" Value="#555555"/>
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <StackPanel>
            <AdornedElementPlaceholder x:Name="placeholder"/>
            <TextBlock Foreground="Red" 
                       Text="{Binding ElementName=placeholder,
                              Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       Margin="3 0 0 0"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="#111111"/>
      </Trigger>
      <Trigger Property="Validation.HasError" Value="True">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Margin" Value="0 0 0 20"/>
        <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OptionMarkFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
  <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
  <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
  <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
  <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
  <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
  <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
  <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
  <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
  <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
  <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
  <Style TargetType="CheckBox">
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Viewbox Width="20">
              <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid x:Name="markGrid">
                  <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                  <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                </Grid>
              </Border>
            </Viewbox>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
              <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
              <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
              <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
              <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
              <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
              <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
              <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
              <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
              <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
              <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
              <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
              <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
              <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
              <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>