<UserControl x:Class="MVVMPattern.Views.CustomerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVMPattern.Views"
        mc:Ignorable="d">
    <Grid>
        <!-- En este caso, el binding no se hace entre elementos de UI, sino entre la View y el ViewModel -->
        <StackPanel>
            <TextBlock Text="{Binding SelectedCustomer.LastName}"
                       Margin="10"/>

            <StackPanel Orientation="Horizontal">
                <Label VerticalContentAlignment="Center" Margin="5 0 0 0">Is Developer:</Label>
                <CheckBox IsChecked="{Binding SelectedCustomer.IsDeveloper}" VerticalContentAlignment="Center"/>
            </StackPanel>

            <ListView ItemsSource="{Binding Customers}"
                      SelectedItem="{Binding SelectedCustomer}"
                      DisplayMemberPath="FirstName"
                      Margin="10"/>

            <!-- En lugar de usar el evento Click de la clase Button, se usa un comando.
                 De esta forma el handler del evento no queda en el View, sino en el ViewModel -->
            <Button Command="{Binding ClearCommand}"
                    Margin="10">Clear</Button>
        </StackPanel>
    </Grid>
</UserControl>
